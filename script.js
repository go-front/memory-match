// script.js

const gameContainer = document.querySelector(".game-container");
const attemptsDisplay = document.getElementById("attempts");

let attempts = 0;
let flippedCards = [];
let matchedCards = 0;

// –ú–∞—Å—Å–∏–≤ —Å –ø–∞—Ä–∞–º–∏ –∑–Ω–∞—á–µ–Ω–∏–π –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫
const cardValues = ["üçé", "üçå", "üçá", "üçâ", "üçç", "üçí", "üçì", "ü•ù"];
const cards = [...cardValues, ...cardValues]; // —É–¥–≤–∞–∏–≤–∞–µ–º –º–∞—Å—Å–∏–≤ –¥–ª—è –ø–∞—Ä

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫
function shuffle(array) {
  for (let i = array.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [array[i], array[j]] = [array[j], array[i]];
  }
  return array;
}

// –°–æ–∑–¥–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏ –Ω–∞ –∏–≥—Ä–æ–≤–æ–º –ø–æ–ª–µ
function createCards() {
  shuffle(cards);
  cards.forEach((value) => {
    const card = document.createElement("div");
    card.classList.add("card");
    card.dataset.value = value;
    card.addEventListener("click", flipCard);
    gameContainer.appendChild(card);
  });
}

// –ü–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫—É
function flipCard() {
  if (flippedCards.length === 2 || this.classList.contains("flip")) return;

  this.classList.add("flip");
  this.textContent = this.dataset.value;
  flippedCards.push(this);

  if (flippedCards.length === 2) {
    attempts++;
    attemptsDisplay.textContent = `–ü–æ–ø—ã—Ç–∫–∏: ${attempts}`;
    checkForMatch();
  }
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
function checkForMatch() {
  const [card1, card2] = flippedCards;
  if (card1.dataset.value === card2.dataset.value) {
    matchedCards += 2;
    flippedCards = [];
    if (matchedCards === cards.length) {
      setTimeout(() => alert(`–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ –∑–∞ ${attempts} –ø–æ–ø—ã—Ç–æ–∫!`), 500);
    }
  } else {
    setTimeout(() => {
      card1.classList.remove("flip");
      card2.classList.remove("flip");
      card1.textContent = "";
      card2.textContent = "";
      flippedCards = [];
    }, 1000);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∏–≥—Ä—É
createCards();
